#!/usr/bin/env bash

# Exit on error, undefined variables, and pipe failures
set -euo pipefail

# Setup logging
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"
}

trap exit SIGTERM SIGINT

# Setup environment
setup_environment() {
    # Set Python path to app directory
    PYTHONPATH="${PYTHONPATH:-$HOME/app}"
    export PYTHONPATH

    # Decrypt sensitive values
    DECRYPT_CMD="gpg --quiet --batch --yes --decrypt --passphrase $ENV_FILE_PASSPHRASE ${APP_DIR:-$HOME/app}/.env.gpg"
    export DECRYPT_CMD

    # Export the decrypted environment variables
    eval "$($DECRYPT_CMD | sed 's/^/export /')" > /dev/null 2>&1

    log "Environment setup completed"
}

# Container initialization
setup_container() {
    setup_environment
    return 0
}

# Main entrypoint
main() {
    log "Starting container"

    setup_container

    if user_key_setup --a "$TARGET_SNOWFLAKE_ACCOUNT" -u "$TARGET_SNOWFLAKE_USER" -f; then
        log "Successfully setup your Snowflake user with keys"
        # Cleanup sensitive data
        eval "$($DECRYPT_CMD | cut -d= -f1 | sed 's/^/unset /')" || true
        sudo unset_passphrase
        exit 0
    else
        log "User setup failed"
        exit 1
    fi
}

main "$@"
